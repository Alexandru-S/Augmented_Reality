#include "Video.h"


Mat matVideoMask; //fg mask fg mask generated by MOG2 method
Ptr<BackgroundSubtractor> ptrMog2; //MOG2 Background subtractor
char keyboard; //input from keyboard

Mat frame;

int Video()
{
	ptrMog2 = createBackgroundSubtractorMOG2();

	string filename = "video1.mp4";
	VideoCapture capture(filename);
	if (!capture.isOpened()) {
		//error in opening the video input
		cerr << "Unable to open video file: " << filename << endl;
		exit(EXIT_FAILURE);
	}
	//read input data. ESC or 'q' for quitting
	while ((char)keyboard != 'q' && (char)keyboard != 27) {
		//read the current frame
		if (!capture.read(frame)) {
			cerr << "Unable to read next frame." << endl;
			cerr << "Exiting..." << endl;
			exit(EXIT_FAILURE);
		}
		//update the background model
		ptrMog2->apply(frame, matVideoMask);
		//get the frame number and write it on the current frame
		stringstream ss;
		rectangle(frame, cv::Point(10, 2), cv::Point(100, 20),
			cv::Scalar(255, 255, 255), -1);
		ss << capture.get(CAP_PROP_POS_FRAMES);
		string frameNumberString = ss.str();
		putText(frame, frameNumberString.c_str(), cv::Point(15, 15),
			FONT_HERSHEY_SIMPLEX, 0.5, cv::Scalar(0, 0, 0));
		//show the current frame and the fg masks
		imshow("Frame", frame);
		imshow("FG Mask MOG 2", matVideoMask);
		//get the input from the keyboard
		keyboard = waitKey(30);
	}
	//delete capture object
	capture.release();
}